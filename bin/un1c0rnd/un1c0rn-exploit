#!/usr/bin/php -q
<?php
require('/srv/un1c0rn/bootstrap.php');
echo 'Started un1c0rn thread with PID '.getmypid().PHP_EOL;

$exploits = array();
$hostDb = new \Un1c0rn\ElasticDb('pwn','hosts');

foreach(glob('/srv/un1c0rn/src/Un1c0rn/Workers/Exploits/*php') as $exploit) {
	$name = '\\'.str_replace('.php','',
			str_replace('/','\\',
				str_replace('/srv/un1c0rn/src/','',$exploit)
			)
		);
	foreach($name::getAffectedPorts() as $port) {
		if(!isset($exploits[$port])) $exploits[$port] = array();
		$exploits[$port][] = $name;
		echo 'Registered '.$name.' for port '.$port.PHP_EOL;
	}
}

function exploit($job) {
	global $exploits;
	global $hostDb;
	$params = json_decode($job->workload(),true);
	if(!isset($exploits[$params['port']])) throw new \Exception('No exploit for port '.$params['port']);
	foreach($exploits[$params['port']] as $exploitName) {
		$exploit = new $exploitName($params);
		$data = $exploit->exploit();
		if($data) {
			$ip = $params['ip'];
			$port = $params['port'];
			$hostDb->save($ip,array('ip'=>$ip,'updated'=>time()));
			$hostDb->addData($ip,'tags',$exploit->getTag());
			$hostDb->addData($ip,'leaks',array(
				'type'=>$exploit->getTag(),
				'data'=>$data,
				'port'=>$port,
				'time'=>time()
			));
			$hostDb->addData($ip,'ports',$port);
			var_dump($hostDb->load($ip));
		}
	}
	return true;
}

$worker = new GearmanWorker(); 
$worker->addServer($config['master']);
$worker->addFunction("exploit", "exploit"); 
echo 'Waiting for work ...'.PHP_EOL;
$worker->work();
echo 'Done'.PHP_EOL;
